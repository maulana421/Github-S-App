package com.example.githubs.repositoryimport android.app.Applicationimport androidx.lifecycle.LiveDataimport com.example.githubs.room.database.UsersDaoimport com.example.githubs.room.database.UsersDatabaseRoomimport com.example.githubs.room.entity.UsersFavoriteclass UsersRepository(application: Application) {    private val mUsersDao: UsersDao    init {        val db = UsersDatabaseRoom.getDatabase(application)        mUsersDao = db.usersDao()    }    fun getAllFavorite(): LiveData<List<UsersFavorite>> = mUsersDao.getFavorite()    suspend fun addFavoriteUsers(usersFavorite: UsersFavorite) {        mUsersDao.addFavoriteUsers(usersFavorite)    }    suspend fun deleteFavoriteUsers(id: Int) {        mUsersDao.deleteFromFavorite(id)    }    suspend fun checkUserFavorite(id: Int): Int {        return mUsersDao.checkFavorite(id)    }    suspend fun deleteAllFavorite() {        mUsersDao.deleteAllFavorite()    }}